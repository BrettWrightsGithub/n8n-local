"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.commonCORSParameters = exports.commonPollingParameters = exports.UM_EMAIL_TEMPLATES_PWRESET = exports.UM_EMAIL_TEMPLATES_INVITE = exports.BINARY_DATA_STORAGE_PATH = exports.CONFIG_FILES = exports.BLOCK_FILE_ACCESS_TO_N8N_FILES = exports.RESTRICT_FILE_ACCESS_TO = exports.CUSTOM_NODES_CATEGORY = exports.HTTP_REQUEST_TOOL_NODE_TYPE = exports.HTTP_REQUEST_NODE_TYPE = exports.PLACEHOLDER_EMPTY_WORKFLOW_ID = exports.PLACEHOLDER_EMPTY_EXECUTION_ID = exports.CUSTOM_EXTENSION_ENV = exports.inDevelopment = exports.inProduction = void 0;
const n8n_workflow_1 = require("n8n-workflow");
const { NODE_ENV } = process.env;
exports.inProduction = NODE_ENV === 'production';
exports.inDevelopment = !NODE_ENV || NODE_ENV === 'development';
exports.CUSTOM_EXTENSION_ENV = 'N8N_CUSTOM_EXTENSIONS';
exports.PLACEHOLDER_EMPTY_EXECUTION_ID = '__UNKNOWN__';
exports.PLACEHOLDER_EMPTY_WORKFLOW_ID = '__EMPTY__';
exports.HTTP_REQUEST_NODE_TYPE = 'n8n-nodes-base.httpRequest';
exports.HTTP_REQUEST_TOOL_NODE_TYPE = '@n8n/n8n-nodes-langchain.toolHttpRequest';
exports.CUSTOM_NODES_CATEGORY = 'Custom Nodes';
exports.RESTRICT_FILE_ACCESS_TO = 'N8N_RESTRICT_FILE_ACCESS_TO';
exports.BLOCK_FILE_ACCESS_TO_N8N_FILES = 'N8N_BLOCK_FILE_ACCESS_TO_N8N_FILES';
exports.CONFIG_FILES = 'N8N_CONFIG_FILES';
exports.BINARY_DATA_STORAGE_PATH = 'N8N_BINARY_DATA_STORAGE_PATH';
exports.UM_EMAIL_TEMPLATES_INVITE = 'N8N_UM_EMAIL_TEMPLATES_INVITE';
exports.UM_EMAIL_TEMPLATES_PWRESET = 'N8N_UM_EMAIL_TEMPLATES_PWRESET';
exports.commonPollingParameters = [
    {
        displayName: 'Poll Times',
        name: 'pollTimes',
        type: 'fixedCollection',
        typeOptions: {
            multipleValues: true,
            multipleValueButtonText: 'Add Poll Time',
        },
        default: { item: [{ mode: 'everyMinute' }] },
        description: 'Time at which polling should occur',
        placeholder: 'Add Poll Time',
        options: n8n_workflow_1.cronNodeOptions,
    },
];
exports.commonCORSParameters = [
    {
        displayName: 'Allowed Origins (CORS)',
        name: 'allowedOrigins',
        type: 'string',
        default: '*',
        description: 'Comma-separated list of URLs allowed for cross-origin non-preflight requests. Use * (default) to allow all origins.',
    },
];
//# sourceMappingURL=Constants.js.map